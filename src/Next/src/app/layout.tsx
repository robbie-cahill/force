import RootStyleRegistry from "Next/src/system/styles/RootStyleRegistry"
import { Providers } from "Next/src/app/Providers"
import { Layout } from "Apps/Components/Layouts"
import Script from "next/script"

import { bootstrapEnv } from "Next/src/system/env"
import { Session } from "next-auth"
import { headers } from "next/headers"

const env = bootstrapEnv()

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const session = await getSession(headers().get("cookie") ?? "")

  return (
    <html lang="en">
      <link
        href="https://webfonts.artsy.net/all-webfonts.css"
        rel="stylesheet"
        type="text/css"
        // @ts-ignore - Next thing
        precedence="default"
      />

      <Script strategy="beforeInteractive">
        {`
          window.process = {}
          window.process.env = ${JSON.stringify(env.clientEnv)
            .replace(/</g, "\\u003c")
            .replace(/-->/g, "--\\>")
            .replace(/\u2028/g, "\\u2028")
            .replace(/\u2029/g, "\\u2029")}
        `}
      </Script>

      <body>
        <RootStyleRegistry>
          <Providers session={session}>
            <Layout>{children}</Layout>
          </Providers>
        </RootStyleRegistry>
      </body>
    </html>
  )
}

async function getSession(cookie: string): Promise<Session> {
  const response = await fetch(
    `${process.env.FORCE_NEXT_URL}/api/auth/session`,
    {
      headers: {
        cookie,
      },
    }
  )

  const session = await response.json()
  return Object.keys(session).length > 0 ? session : null
}
